@page "/Logout"
@using Aviv.Base.UI.Services.Authentication
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject NotificationCustomService NotificationService

<div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
	<div class="text-center">
		<div class="spinner-border text-primary" role="status">
			<span class="visually-hidden">Loading...</span>
		</div>
		<p class="mt-3">Logging out...</p>
	</div>
</div>

@code {
	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500); // Brief delay for better UX
		await LogoutUser();
	}

	private async Task LogoutUser()
	{
		try
		{
			await AuthService.LogoutAsync();
			await NotificationService.ShowInfoAsync("You have been successfully logged out");
		}
		catch (Exception ex)
		{
			await NotificationService.ShowErrorAsync($"Error during logout: {ex.Message}");
		}
		finally
		{
			NavigationManager.NavigateTo("/", true); // Force reload to clear any cached state
		}
	}
}